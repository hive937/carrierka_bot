import os
from dotenv import load_dotenv
import threading

import openai
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import Updater, CommandHandler, ConversationHandler, MessageHandler, Filters

AGE_QUESTION, UNIVERSITY_QUESTION, SPECIALTY_QUESTION, SKILLS_QUESTION, SPHERE_QUESTION, = range(5)

load_dotenv()

def start(update: Update, context):
    reply_keyboard = [['15-20 –ª–µ—Ç', '20-25 –ª–µ—Ç'], ['25 –∏ –±–æ–ª—å—à–µ']]
    update.message.reply_text(
        'üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ö–∞—Ä—å–µ—Ä–∫–∞ - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —à–∞–≥–∏ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Å–≤–æ–µ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –∫–∞—Ä—å–µ—Ä–Ω–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏.\n'
        '\n‚ùì –û—Ç–≤–µ—Ç—å –Ω–∞ –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å - —Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?',
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True),
    )
    return AGE_QUESTION


def age_question(update: Update, context):
    age = update.message.text
    update.message.reply_text('–û—Ç–ª–∏—á–Ω–æ!\n\n‚ùì –¢—ã –æ–±—É—á–∞–µ—à—å—Å—è –≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ?', reply_markup=ReplyKeyboardMarkup([['–î–∞', '–ù–µ—Ç']], one_time_keyboard=True))
    context.user_data['age'] = age
    return UNIVERSITY_QUESTION


def university_question(update: Update, context):
    university = update.message.text
    if university == '–î–∞':
        update.message.reply_text('‚ùì –ö–∞–∫–∞—è —É —Ç–µ–±—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å?')
        return SPECIALTY_QUESTION
    else:
        update.message.reply_text('‚ùì –ö–∞–∫–∏–º–∏ –Ω–∞–≤—ã–∫–∞–º–∏ —Ç—ã –≤–ª–∞–¥–µ–µ—à—å?')
        return SKILLS_QUESTION


def specialty_question(update: Update, context):
    specialty = update.message.text
    update.message.reply_text('‚ùì –ö–∞–∫–∏–º–∏ –Ω–∞–≤—ã–∫–∞–º–∏ —Ç—ã –≤–ª–∞–¥–µ–µ—à—å?')
    context.user_data['specialty'] = specialty
    return SKILLS_QUESTION


def skills_question(update: Update, context):
    skills = update.message.text
    context.user_data['skills'] = skills
    update.message.reply_text('‚ùì –í –∫–∞–∫–æ–π —Å—Ñ–µ—Ä–µ —Ç—ã —Ö–æ—Ç–µ–ª –±—ã —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ?')
    return SPHERE_QUESTION


def sphere_question(update: Update, context):
    sphere = update.message.text
    context.user_data['sphere'] = sphere
    update.message.reply_text('ü§ç –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–≤–µ—Ç—ã! \n –¢–≤–æ—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è...')

    threading.Thread(target=generate_strategy, args=(update, context)).start()
    return ConversationHandler.END


def generate_strategy(update: Update, context):
    openai.api_key = os.environ['API_TOKEN']
    model = 'gpt-3.5-turbo'
    prompt = f'–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –∫–∞—Ä—å–µ—Ä–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è, –µ—Å–ª–∏: –º–Ω–µ {context.user_data["age"]} –ª–µ—Ç, —è —Ö–æ—á—É —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –≤ —Å—Ñ–µ—Ä–µ {context.user_data["sphere"]} –∏ —É –º–µ–Ω—è –µ—Å—Ç—å —Ç–∞–∫–∏–µ –Ω–∞–≤—ã–∫–∏, –∫–∞–∫ {context.user_data["skills"]}'
    completion = openai.ChatCompletion.create(model=model,
                                              messages=[
                                                  {'role': 'user', 'content': prompt}
                                              ],
                                              temperature=0,
                                              max_tokens=2000)
    update.message.reply_text(f'–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —à–∞–≥–∏ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è / –º–æ–º–µ–Ω—Ç—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±–µ —Å—Ç–æ–∏—Ç –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ:\n\n' + completion.choices[0]['message']['content'])
    update.message.reply_text('‚òë –î–∞–Ω–Ω—ã–µ —à–∞–≥–∏ –ø–æ–º–æ–≥—É—Ç —Ç–µ–±–µ –ø–æ–Ω—è—Ç—å, –∫–∞–∫ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –≤ –æ–±–ª–∞—Å—Ç–∏, –∫–æ—Ç–æ—Ä–∞—è —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞. '
                              '–ù–∞–¥–µ—é—Å—å, —è –±—ã–ª –ø–æ–ª–µ–∑–µ–Ω –¥–ª—è —Ç–µ–±—è!')


def cancel(update: Update, context):
    update.message.reply_text('–û–∫, –¥–∞–≤–∞–π –ø–æ–≥–æ–≤–æ—Ä–∏–º –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑.')
    return ConversationHandler.END


def main():
    updater = Updater(token=os.environ['BOT_TOKEN'])
    dispatcher = updater.dispatcher

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            AGE_QUESTION: [MessageHandler(Filters.regex('^(15-20 –ª–µ—Ç|20-25 –ª–µ—Ç|25 –∏ –±–æ–ª—å—à–µ)$'), age_question)],
            UNIVERSITY_QUESTION: [MessageHandler(Filters.regex('^(–î–∞|–ù–µ—Ç)$'), university_question)],
            SPECIALTY_QUESTION: [MessageHandler(Filters.text, specialty_question)],
            SKILLS_QUESTION: [MessageHandler(Filters.text, skills_question)],
            SPHERE_QUESTION: [MessageHandler(Filters.text, sphere_question)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    dispatcher.add_handler(conv_handler)

    updater.start_polling()


if __name__ == '__main__':
    main()
